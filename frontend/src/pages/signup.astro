---
import Layout from '../layouts/Layout.astro';
---

<script>
  import { redirectIfAuthenticated } from '../utils/auth.js';
  
  // Redirect if already authenticated
  if (typeof window !== 'undefined') {
    redirectIfAuthenticated();
  }
</script>

<Layout>
	<div class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
		<div class="max-w-md w-full space-y-8">
			<div>
				<h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
					Crear Cuenta
				</h2>
				<p class="mt-2 text-center text-sm text-gray-600">
					¿Ya tienes cuenta?
					<a href="/login" class="font-medium text-indigo-600 hover:text-indigo-500">
						Inicia sesión
					</a>
				</p>
			</div>
			
			<div x-data="{
				registerForm: {
					firstName: '',
					lastName: '',
					email: '',
					password: '',
					confirmPassword: ''
				},
				loading: false,
				error: '',
				success: '',
				
				init() {
					// Make auth utility available globally
					window.auth = window.auth || {
						setAuth(token, user) {
							localStorage.setItem('token', token);
							localStorage.setItem('user', JSON.stringify(user));
						}
					};
				},
				
				async register() {
					if (this.registerForm.password !== this.registerForm.confirmPassword) {
						this.error = 'Las contraseñas no coinciden';
						return;
					}
					
					if (this.registerForm.password.length < 6) {
						this.error = 'La contraseña debe tener al menos 6 caracteres';
						return;
					}
					
					this.loading = true;
					this.error = '';
					
					try {
						const response = await fetch('http://localhost:8080/auth/register', {
							method: 'POST',
							headers: {
								'Content-Type': 'application/json',
							},
							body: JSON.stringify({
								first_name: this.registerForm.firstName,
								last_name: this.registerForm.lastName,
								email: this.registerForm.email,
								password: this.registerForm.password
							})
						});
						
						if (response.ok) {
							const data = await response.json();
							// Use auth utility
							window.auth.setAuth(data.token, data.user);
							this.success = '¡Registro exitoso! Redirigiendo...';
							setTimeout(() => {
								window.location.href = '/';
							}, 1500);
						} else {
							const errorData = await response.text();
							this.error = 'Error: ' + errorData;
						}
					} catch (error) {
						this.error = 'Error de conexión con el servidor';
					} finally {
						this.loading = false;
					}
				}
			}">
				
				<!-- Error/Success Messages -->
				<div x-show="error" x-transition class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
					<span x-text="error"></span>
				</div>
				
				<div x-show="success" x-transition class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded">
					<span x-text="success"></span>
				</div>
				
				<!-- Register Form -->
				<form @submit.prevent="register()" class="mt-8 space-y-6">
					<div class="rounded-md shadow-sm -space-y-px">
						<div>
							<label for="register-firstname" class="sr-only">Nombre (opcional)</label>
							<input
								id="register-firstname"
								x-model="registerForm.firstName"
								type="text"
								class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
								placeholder="Nombre (opcional)"
							/>
						</div>
						<div>
							<label for="register-lastname" class="sr-only">Apellido (opcional)</label>
							<input
								id="register-lastname"
								x-model="registerForm.lastName"
								type="text"
								class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
								placeholder="Apellido (opcional)"
							/>
						</div>
						<div>
							<label for="register-email" class="sr-only">Email</label>
							<input
								id="register-email"
								x-model="registerForm.email"
								type="email"
								required
								class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
								placeholder="Email"
							/>
						</div>
						<div>
							<label for="register-password" class="sr-only">Contraseña</label>
							<input
								id="register-password"
								x-model="registerForm.password"
								type="password"
								required
								class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
								placeholder="Contraseña (mínimo 6 caracteres)"
							/>
						</div>
						<div>
							<label for="register-confirm-password" class="sr-only">Confirmar Contraseña</label>
							<input
								id="register-confirm-password"
								x-model="registerForm.confirmPassword"
								type="password"
								required
								class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
								placeholder="Confirmar Contraseña"
							/>
						</div>
					</div>

					<div>
						<button
							type="submit"
							:disabled="loading"
							class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50"
						>
							<span x-show="loading" class="absolute left-0 inset-y-0 flex items-center pl-3">
								<svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
									<circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
									<path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
								</svg>
							</span>
							<span x-text="loading ? 'Creando cuenta...' : 'Crear Cuenta'"></span>
						</button>
					</div>
				</form>
			</div>
		</div>
	</div>
</Layout> 